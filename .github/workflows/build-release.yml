name: build ros2 release packages

env:
  PKG: build-release
  DOCKER_PATH: kaylor/focal_humble_env
  # DOCKER_IMG: kaylor/focal_humble_env:v1.1
  #DOCKER_IMG: kaylor/ubuntu2004_humble:latest
on: 
  workflow_dispatch:
  push:
    paths:
      - ".github/workflows/build-release.yml"
      - "user.repos"
  

jobs:
  Build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        index: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 ]
        architecture: [ amd64, arm64 ]
    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v3
    - name: Prepare
      run: |
        sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys DE86F73ED9E67D5E
        echo "deb [arch=amd64] http://42.194.233.81:60000/ros2/ubuntu focal main" | sudo tee /etc/apt/sources.list.d/kaylor-ros2.list > /dev/null
        sudo apt update
        sudo apt install -y tree python3-vcstool python3-apt
        ./check_package.py --cfg user.repos
        cat updates.repos
        echo -e "\033[36m ********************* \033[0m"  
        ls -al
        cat repos${{ matrix.index }}.repos
        mkdir -pv src
        mkdir -pv deb
        vcs import src < repos${{ matrix.index }}.repos
        python3 get_package_path.py

    - name: Print Packages paths
      run: |
        cat packages-path.txt
        cat packages-path.txt | wc -l
        cat repos${{ matrix.index }}.repos

    - name: Build
      run: |
        if [ ${{ matrix.architecture}} == arm64 ]; then
          echo Architecture is ${{ matrix.architecture}}
          docker run --privileged --rm tonistiigi/binfmt --install all
          export DOCKER_IMG=${DOCKER_PATH}:${{ matrix.architecture }}_compile_base1.1
        else 
          echo Architecture is ${{ matrix.architecture}}
          export DOCKER_IMG=${DOCKER_PATH}:compile1.4
        fi
        num=$(cat packages-path.txt | wc -l)
        echo "packages number total: ${num}"
        mkdir -pv info
        echo "job${{ matrix.index }} has ${num} packages" > info/job${{ matrix.index }}.txt
        cat packages-path.txt | tee -a info/job${{ matrix.index }}.txt
        if [ ${num} -ne 0 ]; then
          docker run --rm -v ${PWD}:/root/ros_humble ${DOCKER_IMG} sh -c "cd /root/ros_humble && bash ./build_focal_humble_env.sh packages-path.txt"
          tree deb
          cp repos${{ matrix.index }}.repos info
        fi
        tree deb
        cat info/job${{ matrix.index }}.txt
    
    - name: upload artifact debian packages
      uses: actions/upload-artifact@v3
      with:
        name: deb_{{ matrix.architecture }}
        path: ./deb
    
    - name: upload artifact packages info
      uses: actions/upload-artifact@v3
      with:
        name: info_{{ matrix.architecture }}
        path: ./info

  Release:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        architecture: [ amd64, arm64 ]
    needs: Build
    steps:
    - name: download artifact
      uses: actions/download-artifact@v3

    - name: list file
      run: |
        ls -R
        echo -e "\033[36m ********************* \033[0m"
        cat info_{{ matrix.architecture }}/job*
        touch empty.txt
        mv empty.txt deb_{{ matrix.architecture }}/

    - name: sync files
      uses: burnett01/rsync-deployments@6.0.0
      with:
        switches: -avzr
        path: deb_{{ matrix.architecture }}/
        remote_path: ~/deb/{{ matrix.architecture }}/new_humble
        remote_host: ${{ secrets.HOST }}
        remote_user: ${{ secrets.USERNAME }}
        remote_key: ${{ secrets.SSH_KEY }}
        remote_port: ${{ secrets.PORT }}

    - name: Aptly release
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          aptly repo add ros2_humble_focal deb/{{ matrix.architecture }}/new_humble
          aptly publish update  --force-overwrite  -batch -passphrase="${{ secrets.GPG_PASSPHRASE}}" focal ros2/ubuntu 
          mv deb/{{ matrix.architecture }}/new_humble/*deb deb/{{ matrix.architecture }}/humble
